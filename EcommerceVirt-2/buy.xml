<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction xmlns:con="http://eviware.com/soapui/config" name="buy" method="GET" resourcePath="/buy" id="3465ba21-03c7-494f-bd40-1a73567bc01c">
  <con:settings>
    <con:setting id="ac8250b4-a453-4acb-ace2-9cb35ecec996fileName">buy</con:setting>
    <con:setting id="3436b671-55f7-47d8-85d7-0ccdca7da492fileName">buy</con:setting>
    <con:setting id="3465ba21-03c7-494f-bd40-1a73567bc01cfileName">buy</con:setting>
  </con:settings>
  <con:defaultResponse>Item 1 Response</con:defaultResponse>
  <con:dispatchStyle>SCRIPT</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()
if (!queryString) {
    return "Missing required query parameters"
}

String[] fields = queryString.split("&amp;");
String[] kv;

HashMap&lt;String, String> params = new HashMap&lt;String, String>()
for (int i = 0; i &lt; fields.length; ++i){
    kv = fields[i].split("=");
    if (2 == kv.length)
     params.put(kv[0], kv[1]); 
}

if (!params.containsKey("buystring")) {
     return "Missing buystring parameter"
}
def buystring = URLDecoder.decode(params.get("buystring"), "UTF-8")

if (buystring == "all") 
 return "WildCard Response"
else if (buystring == "Item 1") 
 return "Item 1 Response"
else if (buystring == "Item 2") 
 return "Item 2 Response"
else if (buystring == "Item 3") 
 return "Item 3 Response"
else if (buystring == "Item 4") 
 return "Item 3 Response"
else if (buystring == "Item 5") 
 return "Item 5 Response"
else
return "Unknown Response" 
	


return "Search Response"</con:dispatchPath>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer/>
  <con:routeScript/>
  <con:requestRouteScript/>
  <con:response name="Item 1 Response" id="04021f1d-2a11-41c7-9900-d48b11c6496f" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "purchasestatus": {
    "id": "Item 1",
    "stockStatus": "1 unit",
    "expectedDelivery": "2000 years from now"
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 2 Response" id="f5ff358e-8e2e-4e7f-a67e-9f2d8f8515f7" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "purchasestatus": {
    "id": "Item 2",
    "stockStatus": "10 000 boxes",
    "expectedDelivery": "1 week"
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 3 Response" id="0ab0be66-4160-40af-82db-da4559ee3ea8" httpResponseStatus="200" mediaType="application/json" dataSource="" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200025a000a636f6d707265737365645b0004646174617400025b4278700070">
    <con:settings/>
    <con:responseContent>{
  "purchasestatus": {
    "id": "Item 3",
    "stockStatus": "4 towels",
    "expectedDelivery": "Any day now..."
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 4 Response" id="42a6cb87-f1d6-49eb-a6d3-c2311e9a7ca6" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "purchasestatus": {
    "id": "Item 4",
    "stockStatus": "1 unit",
    "expectedDelivery": "In the near future."
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 5 Response" id="f394abf7-92e2-4aa2-b305-08dce88e64d1" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "purchasestatus": {
    "id": "Item 5",
    "stockStatus": "1 license",
    "expectedDelivery": "You should already have it."
  }
}</con:responseContent>
  </con:response>
  <con:response name="Invalid Session Id Fault" id="80c6ac01-9b64-432c-a145-6fcd53b59c00" httpResponseStatus="401" dataSource="">
    <con:settings/>
    <con:responseContent>{ "Client" : "Invalid Session Id" }</con:responseContent>
  </con:response>
  <con:response name="Unknown Response" id="9615025c-1335-42a9-b2d7-b2a8108a74ea" httpResponseStatus="501" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent/>
  </con:response>
  <con:response name="WildCard Response" id="c0b31344-4b03-472c-bb36-c1813a7e214e" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
</con:restMockAction>
