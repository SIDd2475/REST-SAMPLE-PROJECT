<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction xmlns:con="http://eviware.com/soapui/config" name="search" method="GET" resourcePath="/search" id="9d97fcba-fb25-4d26-b65d-5d73fcde01e9">
  <con:settings>
    <con:setting id="92956b11-db13-4f2a-90f3-f11bc6a1950bfileName">search</con:setting>
    <con:setting id="726d9607-d507-4c87-930f-ed674247a767fileName">search</con:setting>
    <con:setting id="9c327503-0c62-4b6c-a6aa-e39d533b7855fileName">search</con:setting>
    <con:setting id="c7779bed-398f-4da2-92d6-861d4d3fe213fileName">search</con:setting>
    <con:setting id="9d97fcba-fb25-4d26-b65d-5d73fcde01e9fileName">search</con:setting>
  </con:settings>
  <con:defaultResponse>Search Response</con:defaultResponse>
  <con:dispatchStyle>SCRIPT</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchPath>import java.net.URLDecoder;
def queryString = mockRequest.getRequest().getQueryString()
if (!queryString) {
    return "Missing required query parameters"
}

String[] fields = queryString.split("&amp;");
String[] kv;

HashMap&lt;String, String> params = new HashMap&lt;String, String>()
for (int i = 0; i &lt; fields.length; ++i){
    kv = fields[i].split("=");
    if (2 == kv.length)
     params.put(kv[0], kv[1]); 
}

def sessionid = params.get("sessionid")

// check
if( !context.hasProperty( sessionid ))
 return "Invalid Session Id Fault"

def searchstring = URLDecoder.decode(params.get("searchstring"), "UTF-8")

if (searchstring == "all") 
 return "WildCard Response"
else if (searchstring == "Item 1") 
 return "Item 1 Response"
else if (searchstring == "Item 2") 
 return "Item 2 Response"
else if (searchstring == "Item 3") 
 return "Item 3 Response"
else if (searchstring == "Item 4") 
 return "Item 3 Response"
else if (searchstring == "Item 5") 
 return "Item 5 Response"
else
return "Unknown Response" 
	


return "Search Response"</con:dispatchPath>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer/>
  <con:routeScript/>
  <con:requestRouteScript/>
  <con:response name="Search Response" id="83ee122f-ea92-4758-b115-b1ad31f44f6d" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
  <con:response name="Invalid Session Id Fault" id="b5f5e46f-9414-43c5-897f-e9717c44a837" httpResponseStatus="200" dataSource="">
    <con:settings/>
    <con:responseContent>{"Failed" : "Invalid Session Id"}</con:responseContent>
  </con:response>
  <con:response name="Item 1 Response" id="7ad0954f-bfa9-4c05-8ddc-65599f9ebc3e" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 1",
      "description": "One handy protocol droid. This droid is fluent in over six million forms of communication and has a lovely golden color. Built by an enthusiast. Mindwiped only once. Can be carried on your back.",
      "price": "1"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 2 Response" id="7b82ddca-515e-46c2-a17e-86d4928d21ea" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 2",
      "description": "Box of chocolate with several popular items. Covered in Glucose. Recommended safety distance when eating Spring Surprise, 10 feet.",
      "price": "1.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 3 Response" id="85ffcc46-9cc2-4cce-bb0f-5b45ef872d0c" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 3",
      "description": "One towel. Massively useful thing. Impress the strags with this amazing cloth!",
      "price": "2.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 4 Response" id="2ae447fe-45c0-4402-9ca6-ccc6c19ba2d5" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 4",
      "description": "Ono-Sendai 7. The newest cowboy tech from Hosaka. Break the ICE with this conversation piece.",
      "price": "4.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 5 Response" id="54d7692c-df7e-41b2-8938-e0b92057aea5" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 5",
      "description": "Ready! API. All your needs for API readiness",
      "price": "499"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Search Fault Response" id="f3fcf395-1792-4a76-945f-b2e40f34726d" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{"No Result" : "The search returned no items"}</con:responseContent>
  </con:response>
  <con:response name="Unknown Response" id="8877d9e6-705b-4252-9eb6-9f2848ab5ca5" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{ "Client" : "Unknown Search String" }</con:responseContent>
  </con:response>
  <con:response name="WildCard Response" id="0f89daed-10fa-4bb4-bd9f-78783880208c" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
</con:restMockAction>
